<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.app.mybatis.mapper.p.MembersMapper">
	
	<!-- 회원가입 insert -->
	<insert id="join" parameterType="members">
		INSERT INTO members VALUES(#{mid},
									(SELECT gnum FROM grade WHERE gname='브론즈'),
									#{mpwd},
									#{mname},
									#{mphone},
									#{memail},
									sysdate,
									#{login_type})
	</insert>
	
	<!-- 로그인시 존재하는 회원인지 체크 -->
	<select id="isMember" parameterType="members" resultType="members">
		SELECT 
				* 
		FROM 
				members 
		WHERE 
				mid=#{mid} 
				AND mpwd=#{mpwd}
				AND login_type=1
	</select>
	
	<!-- 회원가입 아이디 중복검사 / 해당 아이디 회원 있는지 조회-->
	<select id="idCheck" parameterType="String" resultType="members">
		SELECT * FROM members WHERE mid=#{mid}
	</select>
	
	<!-- 임시비밀번호 발송 위해 존재하는 회원인지 체크 -->
	<select id="findPwd" parameterType="hashmap" resultType="members">
		SELECT * FROM members WHERE mid=#{mid} AND memail=#{memail}
	</select>
	
	<!-- 임시비밀번호로 비밀번호 변경 -->
	<update id="changePwd" parameterType="members">
		UPDATE members SET mpwd=#{mpwd} WHERE mid=#{mid}
	</update>
	
	<!-- 마이페이지 회원정보 담아가기 -->
	<select id="myinfo" parameterType="String" resultType="hashmap">
		SELECT 
				m.mid,
				m.mname,
				m.mpwd,
				m.mphone,
				m.memail,
				to_char(m.mregdate,'yyyy.mm.dd') mregdate,
				m.login_type,
				g.gname
		FROM 
				members m,grade g
		WHERE 
				m.gnum = g.gnum AND m.mid=#{mid}
	</select>
	
	<!-- 회원의 쿠폰 갯수 얻어오기 -->
	<select id="cntCoupon" parameterType="String" resultType="int">
		SELECT 
				NVL(COUNT(*),0)
		FROM 
				coupon
		WHERE 
				mid=#{mid}
				AND coupon_status = '사용안함'
	</select>
	
	<!-- 회원정보 수정하기 -->
	<update id="myinfoupdate" parameterType="members">
		UPDATE members
		<set>
			<if test="mpwd != null">
				mpwd=#{mpwd},
			</if>
			<if test="memail != null">
				memail=#{memail},
			</if>
			<if test="mphone != null">
				mphone=#{mphone}
			</if>
			
		</set>
		WHERE mid=#{mid}
	</update>
	
	<!-- 문의글 등록하기 -->
	<insert id="qnainsert" parameterType="qnaboard">
		INSERT INTO qnaboard VALUES(qnaboard_seq.nextval,#{mid},#{qna_category_num},#{qna_title},#{qna_content},null,sysdate,null)
	</insert>
	
	<!-- 회원 본인이 작성한 문의 내역 조회 -->
	<select id="qnalist" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM
			(
			    SELECT AA.*,ROWNUM AS rnum FROM
			    (
			        SELECT 
							q.qna_num,
							q.mid,
							q.qna_category_num,
							q.qna_title,
							q.qna_content,
							q.anwser,
							q.qna_date,
							qc.qna_category_name
					FROM 
							qnaboard q,qna_category qc
					WHERE 
							q.qna_category_num = qc.qna_category_num
						  	AND q.mid = #{mid}
					ORDER BY 
							qna_date DESC
			    )AA
			)<![CDATA[WHERE rnum>=#{startRow} AND rnum<=#{endRow}]]>
	</select>
	
	<!-- 해당 번호 문의글 상세정보 보기 -->
	<select id="qnaDetail" parameterType="int" resultType="hashmap">
		SELECT 
				q.qna_num,
				q.mid,
				q.qna_category_num,
				q.qna_title,
				q.qna_content,
				q.anwser,
				to_char(q.qna_date,'yyyy/mm/dd hh:mi') qna_date,
				to_char(q.anwser_date,'yyyy/mm/dd hh:mi') anwser_date,
				qc.qna_category_name
		FROM 
				qnaboard q,qna_category qc
		WHERE 
				q.qna_category_num = qc.qna_category_num
				AND q.qna_num = #{qna_num}
	</select>
	
	<!-- 회원의 쿠폰내역 조회 -->
	<select id="couponList" parameterType="String" resultType="coupon">
		SELECT 
				coupon_num,
				mid,
				coupon_name,
				coupon_saletype,
				coupon_status,
				making_date,
				coupon_typenum
		FROM 
				coupon
		WHERE
				mid=#{mid}
		ORDER BY 
				making_date DESC
	</select>
	
	<!-- 회원의 문의 글 갯수 얻어오기 -->
	<select id="qnaListCount" parameterType="String" resultType="int">
	
		SELECT 
				COUNT(*)
		FROM 
				qnaboard
		WHERE 
				mid = #{mid}
	</select>
	
	<!-- 회원 본인이 작성한 문의글 내역 전체 조회 엑셀용-->
	<select id="qnaListAll" resultType="hashmap">
		
		SELECT 
				q.qna_num,
				q.mid,
				q.qna_category_num,
				q.qna_title,
				q.qna_content,
				q.anwser,
				q.qna_date,
				qc.qna_category_name
		FROM 
				qnaboard q,qna_category qc
		WHERE 
				q.qna_category_num = qc.qna_category_num
		ORDER BY 
				qna_date DESC
		
	</select>
	
	<!-- 회원 본인 예약 내역 조회하기 -->
	<select id="bookingList" parameterType="hashmap" resultType="hashmap">
	
		SELECT * FROM
		(
			SELECT AA.*,rownum rnum FROM
			(
				SELECT 
				        b.booking_num,
				        TO_CHAR(b.start_date,'YYYY.MM.DD') start_date,
				        TO_CHAR(b.end_date,'YYYY.MM.DD') end_date,
				        b.book_status,
				        h.house_num,
	                    h.company,
				        himg.house_save_name,
				        r.roomname
				FROM
				        house h,
				        house_img himg,
				        rooms r,
				        booking_table b
				WHERE
				        h.house_num = himg.house_num
				        AND h.house_num = r.house_num
				        AND r.room_num = b.room_num
				        AND b.mid = #{mid}
				ORDER BY
				        b.books_date DESC
			)AA
		)<![CDATA[WHERE rnum>=#{startRow} AND rnum<=#{endRow}]]>
		        
	</select>
	<!-- 회원 본인 예약 갯수 얻어오기 -->
	<select id="bookingCount" parameterType="String" resultType="int">
	
		SELECT COUNT(*) FROM booking_table WHERE mid=#{mid}
	
	</select>
	<!-- 회원 결제내역 조회 -->
	<select id="paymentList" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM
		(
			SELECT AA.*,rownum rnum FROM
			(
				SELECT 
				        h.house_num,
	                    h.company,
				        himg.house_save_name,
				        r.roomname,
				        r.room_num,
	                    p.pay_num,
	                    p.pay,
	                    TO_CHAR(p.pay_day,'yyyy.mm.dd') pay_day,
	                    p.payment_type,
	                    TO_CHAR(b.end_date,'yyyy/mm/dd') end_date,
	                    TO_CHAR(sysdate,'yyyy/mm/dd') sdate
				FROM
				        house h,
				        house_img himg,
				        rooms r,
				        booking_table b,
	                    payment p
				WHERE
				        h.house_num = himg.house_num(+)
				        AND h.house_num = r.house_num
				        AND r.room_num = b.room_num
	                    AND p.booking_num = b.booking_num
				        AND b.mid = #{mid}
				ORDER BY
				        p.pay_num DESC
			)AA
		)<![CDATA[WHERE rnum>=#{startRow} AND rnum<=#{endRow}]]>
	
	</select>
	
	<!-- 회원 결제내역 갯수 얻어오기 -->
	<select id="paymentCount" parameterType="String" resultType="int">
	
		SELECT 
				COUNT(*) 
		FROM 
				booking_table b,
				payment p 
		WHERE 
				b.booking_num = p.booking_num 
				AND b.mid=#{mid}
	
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="reviewInsert" parameterType="review">
	
		INSERT INTO review VALUES(review_seq.nextval,#{room_num},#{mid},#{review_title},#{review_content},sysdate,#{kindness},#{clean},#{convenience})
		<selectKey keyProperty="review_num" resultType="int" order="AFTER"> 
		
			SELECT review_seq.currval FROM dual 
		
		</selectKey>
	
	</insert>
	
	<!-- 리뷰 이미지 등록 -->
	<insert id="reviewImgInsert" parameterType="hashmap">
				<!-- 다중insert max값 얻어와서 적용 방법 sequence사용 시 값 중복으로 오류 -->
<!-- 			<foreach collection="img" item="item" index="index" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL"> -->
<!-- 				 INTO review_img(review_img_num, review_num, review_org_name, review_save_name) -->
<!-- 				VALUES -->
<!-- 				((SELECT NVL(MAX(review_img_num)+1) FROM review_img)+#{index}, #{review_num}, #{item.review_org_name}, #{item.review_save_name}) -->
<!-- 			</foreach> -->
			
			<!-- 다중 insert에서 시퀀스 사용하는 방법 -->
			insert into review_img(review_img_num, review_num, review_org_name, review_save_name)
			select review_img_seq.nextval, A.* from(
			 <foreach item="item" collection="img" separator="UNION ALL " >
			   select #{review_num} as review_num,
			          #{item.review_org_name} as review_org_name,
			          #{item.review_save_name} as review_save_name
			   from dual
			 </foreach>) A

		

	</insert>
	
	<!-- 나의 후기 목록 -->
	<select id="reviewList" parameterType="hashmap" resultType="hashmap">
	
		SELECT * FROM
		(
		    SELECT AA.*,rownum rnum from
		        (
		        SELECT
		                h.company,
		                r.room_num,
		                r.roomname,
		                re.review_title,
		                TO_CHAR(re.review_date,'yyyy/mm/dd') review_date,
		                re.review_num
		        FROM
		                review re,
		                rooms r,
		                house h
		        WHERE 
		                re.room_num = r.room_num
		                AND r.house_num = h.house_num
		                AND mid= #{mid}
		        ORDER BY
		                re.review_date DESC
		        )AA   
		)<![CDATA[WHERE rnum>=#{startRow} AND rnum<=#{endRow}]]>
	
	</select>
	<!-- 회원 리뷰 개수 얻어오기 -->
	<select id="reviewCount" parameterType="String" resultType="int">
	
		SELECT COUNT(*) FROM review WHERE mid=#{mid}
	
	</select>
	
	<select id="naverLogin" parameterType="members" resultType="members">
	
		SELECT * FROM members WHERE mid=#{mid} AND mname=#{mname} AND memail=#{memail}
		
	</select>
	
	<!-- 네이버아이도로 로그인시 최초 1회 db에 회원등록 -->
	<insert id="naverLoginInsert" parameterType="members">
	
		INSERT INTO members VALUES(#{mid},1,null,#{mname},null,#{memail},sysdate,#{login_type})
	
	</insert>
	
	
	
</mapper>